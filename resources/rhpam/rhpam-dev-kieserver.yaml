---
kind: List
apiVersion: v1
items:
- kind: Service
  apiVersion: v1
  spec:
    ports:
    - name: http
      port: 8080
      targetPort: 8080
    - name: https
      port: 8443
      targetPort: 8443
    selector:
      deploymentConfig: "{{ kieserver_application_name }}"
  metadata:
    name: "{{ kieserver_application_name }}"
    labels:
      app: "{{ application_name }}"
      service: "{{ kieserver_application_name }}"
- kind: Route
  apiVersion: v1
  id: "{{ kieserver_application_name }}-https"
  metadata:
    name: {{ kieserver_application_name }}
    annotations:
      kubernetes.io/tls-acme: "true"
    labels:
      app: "{{ application_name }}"
      service: "{{ kieserver_application_name }}"
  spec:
    to:
      name: {{ kieserver_application_name }}
    port:
      targetPort: http
    tls:
      termination: edge

- kind: Service
  apiVersion: v1
  spec:
    clusterIP: "None"
    ports:
    - name: "ping"
      port: 8888
      targetPort: 8888
    selector:
      deploymentConfig: "{{ kieserver_application_name }}"
  metadata:
    name: "{{ kieserver_application_name }}-ping"
    labels:
      app: "{{ application_name }}"
      service: "{{ kieserver_application_name }}"
    annotations:
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
      description: "The JGroups ping port for clustering."

# NOTE:  Does not include kieserver-keystore-volume volume mount as recommended by: https://red.ht/36vlJ9d
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "{{ kieserver_application_name }}"
    labels:
      app: "{{ application_name }}"
      service: "{{ kieserver_application_name }}"
      services.server.kie.org/kie-server-id: "{{ kieserver_application_name }}"
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
  spec:
    strategy:
      rollingParams:
        maxSurge: 100%
        maxUnavailable: 0
      type: Rolling
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - "{{ kieserver_application_name }}"
        from:
          kind: ImageStreamTag
          namespace: "{{ kieserver_image_namespace }}"
          name: "{{ kieserver_image }}:{{ kieserver_image_tag }}"
    - type: ConfigChange
    replicas: 1
    paused: true
    selector:
      deploymentConfig: "{{ kieserver_application_name }}"
    template:
      metadata:
        name: "{{ kieserver_application_name }}"
        labels:
          deploymentConfig: "{{ kieserver_application_name }}"
          app: "{{ application_name }}"
          service: "{{ kieserver_application_name }}"
          services.server.kie.org/kie-server-id: "{{ kieserver_application_name }}"
      spec:
        serviceAccountName: "{{ service_account }}"
        terminationGracePeriodSeconds: 90
        containers:
        - name: "{{ kieserver_application_name }}"
          image: {{ kieserver_image }}
          imagePullPolicy: Always

#         Only used with "freeform" KIE-Server deployment where org.kie.server.startup.strategy=OpenShiftStartupStrategy
#         Works in conjunction with the following env var:          WORKBENCH_SERVICE_NAME
#         lifecycle:
#           postStart:
#             exec:
#               command:
#               - /bin/sh
#               - /opt/eap/bin/launch/jboss-kie-kieserver-hooks.sh
#           preStop:
#             exec:
#               command:
#               - /bin/sh
#               - /opt/eap/bin/launch/jboss-kie-kieserver-hooks.sh

          resources:
            requests:
              cpu: "{{ kieserver_cpu_request }}"
              memory: "{{ kieserver_memory_request }}"
            limits:
              cpu: "{{ kieserver_cpu_limit }}"
              memory: "{{ kieserver_memory_limit }}"
          livenessProbe:
            exec:
              command:
              - "/bin/bash"
              - "-c"
              - "curl --fail --silent -u '{{ kie_admin_user }}:{{ kie_admin_password }}' http://localhost:8080/services/rest/server/healthcheck"
            initialDelaySeconds: 180
            timeoutSeconds: 2
            periodSeconds: 15
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
              - "/bin/bash"
              - "-c"
              - "curl --fail --silent -u '{{ kie_admin_user }}:{{ kie_admin_password }}' http://localhost:8080/services/rest/server/readycheck"
            initialDelaySeconds: 30
            timeoutSeconds: 2
            periodSeconds: 30
            failureThreshold: 6
          ports:
          - name: jolokia
            containerPort: 8778
            protocol: TCP
          - name: http
            containerPort: 8080
            protocol: TCP
          - name: https
            containerPort: 8443
            protocol: TCP
          env:
          - name: JAVA_MAX_MEM_RATIO
            value: "{{ kieserver_java_max_mem_ratio }}"
          - name: JAVA_INITIAL_MEM_RATIO
            value: "{{ kieserver_java_initial_mem_ratio }}"
          - name: GC_MAX_METASPACE_SIZE
            value: "{{ kieserver_gc_max_metaspace_size }}"
#          - name: WORKBENCH_SERVICE_NAME
#            value: "{{ workbench_service_name }}"
          - name: KIE_ADMIN_USER
            value: "{{ kie_admin_user }}"
          - name: KIE_ADMIN_PWD
            value: "{{ kie_admin_password }}"
          - name: KIE_SERVER_MODE
            value: "{{ kie_server_mode }}"
          - name: KIE_MBEANS
            value: "{{ kie_mbeans }}"
          - name: DROOLS_SERVER_FILTER_CLASSES
            value: "{{ drools_server_filter_classes }}"
          - name: PROMETHEUS_SERVER_EXT_DISABLED
            value: "{{ prometheus_server_ext_disabled }}"
          - name: KIE_SERVER_BYPASS_AUTH_USER
            value: "{{ kieserver_bypass_auth_user }}"
          - name: KIE_SERVER_CONTROLLER_USER
            value: "{{ kieserver_controller_user }}"
          - name: KIE_SERVER_CONTROLLER_PWD
            value: "{{ kieserver_controller_password }}"
          - name: KIE_SERVER_CONTROLLER_TOKEN
            value: "{{ kieserver_controller_token}}"
          - name: KIE_SERVER_CONTROLLER_SERVICE
            value: "{{ businesscentral_application_name }}"
          - name: KIE_SERVER_CONTROLLER_PROTOCOL
            value: "{{ kieserver_controller_protocol }}" 
          - name: KIE_SERVER_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['services.server.kie.org/kie-server-id']
          - name: KIE_SERVER_ROUTE_NAME
            value: "{{ kieserver_application_name }}"
          - name: KIE_SERVER_STARTUP_STRATEGY
            value: "{{ kie_server_startup_strategy }}"
          - name: KIE_SERVER_USER
            value: "{{ kieserver_user }}"
          - name: KIE_SERVER_PWD
            value: "{{ kieserver_password }}"
          - name: MAVEN_MIRROR_URL
            value: "{{ maven_mirror_url }}"
          - name: MAVEN_MIRROR_OF
            value: "{{ maven_mirror_of }}"
          - name: MAVEN_REPOS
            value: "RHPAMCENTR,EXTERNAL"
          - name: RHPAMCENTR_MAVEN_REPO_ID
            value: "repo-rhpamcentr"
          - name: RHPAMCENTR_MAVEN_REPO_SERVICE
            value: "{{ businesscentral_application_name }}"
          - name: RHPAMCENTR_MAVEN_REPO_PATH
            value: "/maven2/"
          - name: RHPAMCENTR_MAVEN_REPO_USERNAME
            value: "{{ kie_maven_user }}"
          - name: RHPAMCENTR_MAVEN_REPO_PASSWORD
            value: "{{ kie_maven_password }}"
          - name: EXTERNAL_MAVEN_REPO_ID
            value: "{{ maven_repo_id }}"
          - name: EXTERNAL_MAVEN_REPO_URL
            value: "{{ maven_repo_url }}"
          - name: EXTERNAL_MAVEN_REPO_USERNAME
            value: "{{ maven_repo_username }}"
          - name: EXTERNAL_MAVEN_REPO_PASSWORD
            value: "{{ maven_repo_password }}"
          - name: KIE_SERVER_MGMT_DISABLED
            value: "{{ kie_server_mgmt_disabled }}"
          - name: KIE_SERVER_PERSISTENCE_DS
            value: "java:/jboss/datasources/rhpam"
          - name: DATASOURCES
            value: "RHPAM"
          - name: RHPAM_DATABASE
            valueFrom:
              secretKeyRef:
                name: {{ postgresql_credentials_secret }}
                key: database-name
          - name: RHPAM_DRIVER
            value: "postgresql"
          - name: RHPAM_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ postgresql_credentials_secret }}
                key: database-user
          - name: RHPAM_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ postgresql_credentials_secret }}
                key: database-password
          - name: RHPAM_SERVICE_HOST
            value: "{{ postgresql_application_name }}"
          - name: RHPAM_SERVICE_PORT
            value: "5432"
          - name: KIE_SERVER_PERSISTENCE_DIALECT
            value: "org.hibernate.dialect.PostgreSQLDialect"
          - name: RHPAM_JTA
            value: "true"
          - name: RHPAM_JNDI
            value: "{{ kie_server_persistence_ds }}"
          - name: RHPAM_CONNECTION_CHECKER
            value: "org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLValidConnectionChecker"
          - name: RHPAM_EXCEPTION_SORTER
            value: "org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLExceptionSorter"
          - name: TIMER_SERVICE_DATA_STORE_REFRESH_INTERVAL
            value: "{{ time_service_data_store_refresh_interval }}"
          - name: JGROUPS_PING_PROTOCOL
            value: "openshift.DNS_PING"
          - name: OPENSHIFT_DNS_PING_SERVICE_NAME
            value: "{{ kieserver_application_name }}-ping"
          - name: OPENSHIFT_DNS_PING_SERVICE_PORT
            value: "8888"
          - name: SSO_URL
            value: "{{ rhsso_url }}"
          - name: SSO_OPENIDCONNECT_DEPLOYMENTS
            value: "ROOT.war"
          - name: SSO_REALM
            value: "{{ sso_realm }}"
          - name: SSO_USERNAME
            value: "{{ sso_username }}"
          - name: SSO_PASSWORD
            value: "{{ sso_password }}"
          - name: SSO_DISABLE_SSL_CERTIFICATE_VALIDATION
            value: "{{ sso_disable_ssl_certificate_validation }}"
          - name: SSO_CLIENT
            value: "{{ kie_server_sso_client }}"
          - name: SSO_SECRET
            value: "{{ kie_server_sso_secret }}"
          - name: SSO_ENABLE_CORS
            value: "true"
          - name: SSO_PRINCIPAL_ATTRIBUTE
            value: "preferred_username"
          - name: JAVA_OPTS_APPEND
            value: "{{ kieserver_java_opts_append }}"

