---
kind: List
apiVersion: v1
items:
- kind: Service
  apiVersion: v1
  spec:
    ports:
    - name: http
      port: 8080
      targetPort: 8080
    - name: https
      port: 8443
      targetPort: 8443
    selector:
      deploymentConfig: "{{ businessmonitoring_application_name }}"
  metadata:
    name: "{{ businessmonitoring_application_name }}"
    labels:
      app: "{{ application_name }}"
      service: "{{ businessmonitoring_application_name }}"
- kind: Route
  apiVersion: v1
  id: "{{ businessmonitoring_application_name }}-https"
  metadata:
    name: {{ businessmonitoring_application_name }}
    labels:
      app: "{{ application_name }}"
      service: "{{ businessmonitoring_application_name }}"
    annotations:
      haproxy.router.openshift.io/timeout: 60s
  spec:
    to:
      name: "{{ businessmonitoring_application_name }}"
    port:
      targetPort: http
    tls:
      termination: edge
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "{{ businessmonitoring_application_name }}"
    labels:
      app: "{{ application_name }}"
      service: "{{ businessmonitoring_application_name }}"
  spec:
    strategy:
      rollingParams:
        maxSurge: 100% 
        maxUnavailable: 0
      type: Rolling
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - "{{ businessmonitoring_application_name }}"
        from:
          kind: ImageStreamTag
          namespace: "{{ businessmonitoring_image_namespace }}"
          name: "{{ businessmonitoring_image }}:{{ businessmonitoring_image_tag }}"
    - type: ConfigChange
    replicas: 1
    selector:
      deploymentConfig: "{{ businessmonitoring_application_name }}"
    template:
      metadata:
        name: "{{ businessmonitoring_application_name }}"
        labels:
          deploymentConfig: "{{ businessmonitoring_application_name }}"
          app: "{{ application_name }}"
          service: "{{ businessmonitoring_application_name }}"
      spec:
        serviceAccountName: "{{ service_account }}"
        terminationGracePeriodSeconds: 60
        containers:
        - name: "{{ businessmonitoring_application_name }}"
          image: {{ businessmonitoring_image }}
          imagePullPolicy: Always
          resources:
            requests:
              cpu: "{{ businessmonitoring_cpu_request }}"
              memory: "{{ businessmonitoring_memory_request }}"
            limits:
              cpu: "{{ businessmonitoring_cpu_limit }}"
              memory: "{{ businessmonitoring_memory_limit }}"
          volumeMounts:
          - name: "{{ businessmonitoring_application_name }}-pvol"
            mountPath: "/opt/eap/standalone/data/kie"
          livenessProbe:
            exec:
              command:
              - "/bin/bash"
              - "-c"
              - "curl --fail --silent -u '{{ kie_admin_user }}:{{ kie_admin_password }}' http://localhost:8080/rest/healthy"
            initialDelaySeconds: 180
            timeoutSeconds: 2
            periodSeconds: 15
          readinessProbe:
            exec:
              command:
              - "/bin/bash"
              - "-c"
              - "curl --fail --silent -u '{{ kie_admin_user }}:{{ kie_admin_password }}' http://localhost:8080/rest/ready"
            initialDelaySeconds: 60
            timeoutSeconds: 2
            periodSeconds: 30
            failureThreshold: 6
          ports:
          - name: jolokia
            containerPort: 8778
            protocol: TCP
          - name: http
            containerPort: 8080
            protocol: TCP
          - name: https
            containerPort: 8443
            protocol: TCP
          env:
          - name: JAVA_MAX_MEM_RATIO
            value: "{{ businessmonitoring_java_max_mem_ratio }}"
          - name: JAVA_INITIAL_MEM_RATIO
            value: "{{ businessmonitoring_java_initial_mem_ratio }}"
          - name: GC_MAX_METASPACE_SIZE
            value: "{{ businessmonitoring_gc_max_metaspace_size }}"            
          - name: KIE_ADMIN_USER
            value: "{{ kie_admin_user }}"
          - name: KIE_ADMIN_PWD
            value: "{{ kie_admin_password }}"
          - name: KIE_MBEANS
            value: "{{ kie_mbeans }}"
          - name: KIE_SERVER_CONTROLLER_OPENSHIFT_PREFER_KIESERVER_SERVICE
            value: "{{ kie_server_controller_prefer_kieserver_service }}"
          - name: KIE_SERVER_CONTROLLER_TEMPLATE_CACHE_TTL
            value: "{{ kie_server_controller_template_cache_ttl }}"
          - name: KIE_WORKBENCH_CONTROLLER_OPENSHIFT_ENABLED
            value: "{{ kie_workbench_controller_openshift_enabled }}"
          - name: KIE_SERVER_CONTROLLER_USER
            value: "{{ kieserver_controller_user }}"
          - name: KIE_SERVER_CONTROLLER_PWD
            value: "{{ kieserver_controller_password }}"
          - name: KIE_SERVER_USER
            value: "{{ kieserver_user }}"
          - name: KIE_SERVER_PWD
            value: "{{ kieserver_password }}"
          - name: KIE_MAVEN_USER
            value: "{{ kie_maven_user }}"
          - name: KIE_MAVEN_PWD
            value: "{{ kie_maven_password }}"
          - name: ADMIN_USERNAME
            value: "eapadmin"
          - name: ADMIN_PASSWORD
            value: "eapadmin1!"
          - name: MAVEN_REPOS
            value: "EXTERNAL"
          - name: EXTERNAL_MAVEN_REPO_HOST
            value: "{{ nexus_host }}"
          - name: EXTERNAL_MAVEN_REPO_PORT
            value: "{{ nexus_port }}"
          - name: EXTERNAL_MAVEN_REPO_PATH
            value: "{{ nexus_path }}"
          - name: JAVA_OPTS_APPEND
            value: "{{ businessmonitoring_java_opts_append }}"
          - name: SSO_URL
            value: "{{ rhsso_url }}"
          - name: SSO_OPENIDCONNECT_DEPLOYMENTS
            value: "ROOT.war"
          - name: SSO_REALM
            value: "{{ sso_realm }}"
          - name: SSO_USERNAME
            value: "{{ sso_username }}"
          - name: SSO_PASSWORD
            value: "{{ sso_password }}"
          - name: SSO_DISABLE_SSL_CERTIFICATE_VALIDATION
            value: "{{ sso_disable_ssl_certificate_validation }}"
          - name: SSO_CLIENT
            value: "{{ kie_server_sso_client }}"
          - name: SSO_SECRET
            value: "{{ kie_server_sso_secret }}"
          - name: SSO_ENABLE_CORS
            value: "true"
          - name: SSO_PRINCIPAL_ATTRIBUTE
            value: "preferred_username"

        volumes:
        - name: "{{ businessmonitoring_application_name }}-pvol"
          persistentVolumeClaim:
            claimName: "{{ businessmonitoring_pvc_name }}"
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: "{{ businessmonitoring_pvc_name }}"
    labels:
      application: "{{ application_name }}"
      service: "{{ businessmonitoring_application_name }}"
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: {{ businessmonitoring_pvc_volume_capacity }}
